#!/bin/bash
#
#  setup_cmake Chooses the correct cmake build command for a machine.
#
#-------------------------------------------------------------------------------

BUILD_TYPE=Release

MACHINE_ID=`uname -n`

echo Building KORC for machine $MACHINE_ID
echo

if [ $# -eq 1 ]
then
    BUILD_TYPE=Debug
fi

echo cmake configured to generate a $BUILD_TYPE build.
if [ "$BUILD_TYPE" == Debug ]
then
    echo "    cmake may be reconfigured to generate a Release build by running this     "
    echo "    script with no arguments or using the commmand                            "
    echo
    echo "    cmake -DCMAKE_BUILD_TYPE=Release                                          "
else
    echo "    cmake may be reconfigured to generate a Debug build by running this script"
    echo "    with a Debug argument or using the commmand                               "
    echo
    echo "    cmake -DCMAKE_BUILD_TYPE=Debug                                            "
fi

# CMake doesn't like being reconfigured completely. To avoid problems this
# script will delete the CMakeCache.txt file allowing this script to start
# from a clean slate. Use the -f option on rm to silence any errors from
# rm. This makes will cause rm to ignore the error to occur if
# CMakeCache.txt doesn't exist.

rm -f CMakeCache.txt
rm -rf CMakeFiles


echo
if [ $MACHINE_ID == "mbp103254"     ] || \
   [ $MACHINE_ID == "cianciosaimac" ]
then
    #  Config for Mark Cianciosa's ORNL machine.

    cmake -DCMAKE_BUILD_TYPE:String=$BUILD_TYPE                             \
          -DEZSpline_INCLUDE_PATH=/Users/m4c/repo/trunk/build/modules/stell \
          -DEZSpline_LINK_FLAGS="-L/Users/m4c/repo/trunk/build/lib -lstell" \
          -DCMAKE_Fortran_FLAGS=-DHDF5_DOUBLE_PRESICION

elif [ $MACHINE_ID == "MBP115573"     ] 
then
    #  Config for Matt Beidler's ORNL machine.

#    export CC=/opt/local/bin/mpicc-mpich-gcc8
#    export CXX=/opt/local/bin/mpic++-mpich-gcc8
#    export FC=/opt/local/bin/mpif90-mpich-gcc8

    export CC=/opt/local/bin/gcc-mp-8
    export CXX=/opt/local/bin/g++-mp-8
    export FC=/opt/local/bin/gfortran-mp-8

    cmake -DCMAKE_BUILD_TYPE:String=$BUILD_TYPE                             \
          -DEZSpline_INCLUDE_PATH=/Users/21b/Desktop/KORC_PERIPHERALS/PSPLINES/pspline/MAC/mod \
          -DEZSpline_LINK_FLAGS="-L/Users/21b/Desktop/KORC_PERIPHERALS/PSPLINES/pspline/MAC/lib -lpspline" \
	  -DEZSpline_LIBRARIES=/Users/21b/Desktop/KORC_PERIPHERALS/PSPLINES/pspline/MAC/lib/libpspline.a   \
          -DCMAKE_Fortran_FLAGS="-O3 -msse2 -DHDF5_DOUBLE_PRESICION -fopenmp-simd -malign-double" \
          -DCMAKE_C_FLAGS="-O3 -msse2 -fopenmp-simd -malign-double"  \
          -DCMAKE_CXX_FLAGS="-O3 -msse2 -fopenmp-simd -malign-double" \
	  -DCMAKE_Fortran_FLAGS_DEBUG="-g -ffpe-trap=invalid,zero,overflow -fimplicit-none -fbacktrace  -fsanitize=address"   \
          -DCMAKE_C_FLAGS_DEBUG="-g" \
    	  -DCMAKE_CXX_FLAGS_DEBUG="-g" \
	  -DUSE_M3D_C1=ON           \
	  -DFIO_LIBRARIES=/usr/local/lib/libfusionio.a  \
	  -DM3DC1_LIBRARIES=/usr/local/lib/libm3dc1.a	\
          -DM3D_C1_INCLUDE_PATH=/usr/local/include  \
          -DM3D_C1_LINK_FLAGS="-L/usr/local/lib -lfusionio -lm3dc1" \

 
#	  -DCMAKE_CXX_COMPILER=/opt/local/bin/mpic++-mpich-gcc8

    
elif [ $MACHINE_ID == "cori01"   ] || \
     [ $MACHINE_ID == "cori02"   ] || \
     [ $MACHINE_ID == "cori03"   ] || \
     [ $MACHINE_ID == "cori04"   ] || \
     [ $MACHINE_ID == "cori05"   ] || \
     [ $MACHINE_ID == "cori06"   ] || \
     [ $MACHINE_ID == "cori07"   ] || \
     [ $MACHINE_ID == "cori08"   ] || \
     [ $MACHINE_ID == "cori09"   ] || \
     [ $MACHINE_ID == "cori10"   ] || \
     [ $MACHINE_ID == "cori11"   ] || \
     [ $MACHINE_ID == "cori12"   ]
then

    #  Config for NERSC machines.
    module load cmake
    module load cray-hdf5
    module unload darshan/3.1.4
#    module swap PrgEnv-intel PrgEnv-gnu
    cmake -DCMAKE_BUILD_TYPE:String=$BUILD_TYPE                                          \
          -DCMAKE_PREFIX_PATH=$MPICH_DIR                                                 \
          -DEZSpline_INCLUDE_PATH=/global/u1/m/mbeidler/LIBS/PSPLINES/LINUX/mod \
          -DEZSpline_LINK_FLAGS="-L/global/u1/m/mbeidler/LIBS/PSPLINES/LINUX/lib -lpspline" \
          -DEZSpline_LIBRARIES=/global/u1/m/mbeidler/LIBS/PSPLINES/LINUX/lib/libpspline.a   \
	  -DCMAKE_Fortran_FLAGS="-O3 -axMIC-AVX512,AVX -DHDF5_DOUBLE_PRESICION -vec-threshold0 -simd -qopenmp-simd -align array64byte -assume contiguous_assumed_shape -vecabi=cmdtarget"  \
          -DCMAKE_C_FLAGS="-O3 -axMIC-AVX512,AVX -vec-threshold0 -simd -qopenmp"   \
          -DCMAKE_CXX_FLAGS="-O3 -std=c++11 -axMIC-AVX512,AVX -vec-threshold0 -simd -qopenmp" \
          -DCMAKE_CXX_FLAGS_DEBUG="-g -traceback -Bdynamic -qopt-report=5 -qopt-report-phase=vec" \
          -DCMAKE_C_FLAGS_DEBUG="-g -traceback -Bdynamic -qopt-report=5 -qopt-report-phase=vec " \
          -DCMAKE_Fortran_FLAGS_DEBUG="-g -traceback -check all -Bdynamic -debug inline-debug-info -qopt-report=5 -qopt-report-phase=vec -qoverride-limits" \
	  -DUSE_M3D_C1=ON           \
	  -DFIO_LIBRARIES=/global/u1/m/mbeidler/LIBS/FIO/install/lib/libfusionio.a  \
	  -DM3DC1_LIBRARIES=/\global/u1/m/mbeidler/LIBS/FIO/install/lib/libm3dc1.a	\
          -DM3D_C1_INCLUDE_PATH=/global/u1/m/mbeidler/LIBS/FIO/install/include  \
          -DM3D_C1_LINK_FLAGS="-L/global/u1/m/mbeidler/LIBS/FIO/install/lib -lfusionio -lm3dc1" \

    #Intel Compiler
#          -DEZSpline_INCLUDE_PATH=/global/u1/m/mbeidler/KORC_old/PSPLINES/LINUX_INTEL/mod \
#          -DEZSpline_LINK_FLAGS="-L/global/u1/m/mbeidler/KORC_old/PSPLINES/LINUX_INTEL/lib -lpspline" \
#          -DEZSpline_LIBRARIES=/global/u1/m/mbeidler/KORC_old/PSPLINES/LINUX_INTEL/lib/libpspline.a   \
#	   -DCMAKE_Fortran_FLAGS="-O3 -mkl -axMIC-AVX512,AVX -DHDF5_DOUBLE_PRESICION -vec-threshold0 -simd -qopenmp-simd -align array64byte -assume contiguous_assumed_shape -vecabi=cmdtarget"  \
#          -DCMAKE_C_FLAGS="-O3 -mkl -axMIC-AVX512,AVX -vec-threshold0 -simd -qopenmp"   \
#          -DCMAKE_CXX_FLAGS="-O3 -mkl -std=c++11 -axMIC-AVX512,AVX -vec-threshold0 -simd -qopenmp" \
#          -DCMAKE_CXX_FLAGS_DEBUG="-g -Bdynamic -qopt-report=5 -qopt-report-phase=vec" \
#          -DCMAKE_C_FLAGS_DEBUG="-g -Bdynamic -qopt-report=5 -qopt-report-phase=vec " \
#          -DCMAKE_Fortran_FLAGS_DEBUG="-g -Bdynamic -debug inline-debug-info -qopt-report=5 -qopt-report-phase=vec -qoverride-limits"

    #GNU Compiler
#          -DEZSpline_INCLUDE_PATH=/global/u1/m/mbeidler/KORC_old/PSPLINES/LINUX_GNU/mod \
#          -DEZSpline_LINK_FLAGS="-L/global/u1/m/mbeidler/KORC_old/PSPLINES/LINUX_GNU/lib -lpspline" \
#          -DEZSpline_LIBRARIES=/global/u1/m/mbeidler/KORC_old/PSPLINES/LINUX_GNU/lib/libpspline.a   \
#          -DCMAKE_Fortran_FLAGS="-O3 -mavx512f -mavx512cd -mavx512er -mavx512pf -DHDF5_DOUBLE_PRESICION -fopenmp-simd -malign-double" \
#          -DCMAKE_C_FLAGS="-O3 -mavx512f -mavx512cd -mavx512er -mavx512pf -fopenmp-simd -malign-double"  \
#          -DCMAKE_CXX_FLAGS="-O3 -mavx512f -mavx512cd -mavx512er -mavx512pf -fopenmp-simd -malign-double" \
#	   -DCMAKE_Fortran_FLAGS_DEBUG="-g -ffpe-trap=invalid,zero,overflow -fimplicit-none -fbacktrace" \
#          -DCMAKE_C_FLAGS_DEBUG="-g" \
#    	   -DCMAKE_CXX_FLAGS_DEBUG="-g"
    
else
# MACHINE_ID is new and unknown. Inform the user how to add support for this new machine.
    echo $MACHINE_ID not suported by this script.
    echo To support this machine, add a new elif statement of the form
    echo
    echo elif [ \$MACHINE_ID == \"$MACHINE_ID\" ]
    echo then
    echo "   " cmake -DVARIABLE=value ...
    echo
fi
