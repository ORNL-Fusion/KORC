name: spack_mirror
on: [ workflow_dispatch ]

jobs:
  job_one:
    runs-on: ubuntu-latest
    steps:
      - name: grab main project
        uses: actions/checkout@v4

      - name: spack cache
        id: spack-cache
        uses: actions/cache@v3
        with:
          key: spack-cache-sandlot-4
          path: |
            ./spack
            ./spack_sandlot_mirror
            ./spack_sandlot_env

      - if: ${{ steps.spack-cache.outputs.cache-hit != 'true' }}
        name: grab spack
        uses: actions/checkout@v4
        with:
          repository: 'spack/spack'
          ref: 'v0.21.1'
          path: './spack'
      #
      #   git clone --depth=1 --single-branch --branch v0.21.1 https://github.com/spack/spack.git
      #

      - if: ${{ steps.spack-cache.outputs.cache-hit != 'true' }}
        name: create spack cache
        run: |
          . ./spack/share/spack/setup-env.sh

          spack env create      -d ./spack_sandlot_env
          spack env activate -p -d ./spack_sandlot_env

          spack config add "config:install_tree:padded_length:128"

          spack install --no-cache --add gcc@13.1.0
          spack load gcc@13.1.0
          spack compiler find

          spack install --no-cache --add cmake %gcc@13.1.0
          spack load cmake %gcc@13.1.0

          spack concretize -f
          spack install --no-cache --add hdf5+fortran+mpi %gcc@13.1.0
          spack load hdf5+fortran+mpi %gcc@13.1.0

          spack gc -y

          rm -rf ./spack_sandlot_mirror

          spack mirror create -d ./spack_sandlot_mirror --all
          spack mirror add sandlot ./spack_sandlot_mirror

          spack gpg create "My Name" "<my.email@my.domain.com>"

          #mkdir ~/private_gpg_backup
          #cp ~/spack/opt/spack/gpg/*.gpg ~/private_gpg_backup
          #cp ~/spack/opt/spack/gpg/pubring.* ~/mirror

          spack buildcache push ./spack_sandlot_mirror

          spack buildcache keys --install --trust --force

          spack bootstrap mirror --binary-packages ./spack_sandlot_mirror

          #spack bootstrap add --trust local-sources <final-path>/metadata/sources
          #spack bootstrap add --trust local-binaries <final-path>/metadata/binaries

          spack env deactivate


  job_two:
    needs: job_one
    runs-on: ubuntu-latest
    steps:
      - name: grab main project
        uses: actions/checkout@v2

      - name: spack cache
        id: spack-cache
        uses: actions/cache@v3
        with:
          key: spack-cache-sandlot-4
          path: |
            ./spack
            ./spack_sandlot_mirror
            ./spack_sandlot_env

      - name: build korc
        run: |
          . ./spack/share/spack/setup-env.sh

          spack env activate -p -d ./spack_sandlot_env

          spack mirror list

          #spack install --no-check-signature --add gcc@13.1.0
          #spack load gcc@13.1.0
          #spack compiler find

          #spack install --no-check-signature --add cmake %gcc@13.1.0
          #spack load cmake %gcc@13.1.0

          #spack install --no-check-signature --add hdf5+fortran+mpi %gcc@13.1.0
          #spack load hdf5+fortran+mpi %gcc@13.1.0

          spack find -ldf

          spack find -l

          set -x
          which cmake
          which gfortran
          gfortran --version
          set +x

          ./build.sh

          ctest --verbose

          spack env deactivate

      - name: Show Cache
        if: failure()
        shell: bash
        working-directory: ${{runner.workspace}}/KORC
        run: |
          tree -L 2
          pwd
          ls -la
          cat CMakeCache.txt

