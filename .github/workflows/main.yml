name: main

on: [ push, workflow_dispatch ]

jobs:

  job_machine:
    strategy:
      matrix:
        os_env:
          - macos-latest
          - windows-latest

        build_type:
          - Debug
          - Release

        scenario:
          - ppush_regression
          - nersc_knl_xcompile

    runs-on: ${{ matrix.os_env }}

    steps:
      - name: grab main project
        uses: actions/checkout@v2

      - name: grab cmfkit base
        uses: actions/checkout@v2
        with: 
          repository: ornl-fusion/cmfkit
          path: ./.cmfkit_base

      - name: launch build
        env:
          CMFKIT_PLATFORM:   github-vm-${{ matrix.os_env }}
          CMFKIT_SCENARIO:             ${{ matrix.scenario }}

          CMAKE_BUILD_TYPE:  ${{ matrix.build_type }}

        run: |
          cd ./.cmfkit_base && ./launch build

      - name: diag output - env vars
        run: env | sort

      - name: diag output - dir structure
        run: pwd && ls -la && ls -la .cmfkit/


  job_container:
    strategy:
      matrix:
        seed_image:
          - 'alpine:3.14.2'
          - 'ubuntu:20.04'
          - 'rikorose/gcc-cmake:gcc-10'

        build_type:
          - Debug
          - Release

        scenario:
          - ppush_regression
          - nersc_knl_xcompile

    runs-on: ubuntu-latest

    steps:
      - name: grab main project
        uses: actions/checkout@v2
#       with:
#         path: ./${{ github.event.repository.name }}

      - name: grab cmfkit
        uses: actions/checkout@v2
        with:
          repository: ornl-fusion/cmfkit
          path: ./.cmfkit_base

      - name: launch build
        env:
          CMFKIT_PLATFORM:   readybake
          CMFKIT_SCENARIO:              ${{ matrix.scenario }}
          CMFKIT_READYBAKE_IMAGE_SEED:  ${{ matrix.seed_image }}

          CMAKE_BUILD_TYPE:  ${{ matrix.build_type }}

        run: |
          cd ./.cmfkit_base && ./launch build

      - name: diag output - env vars
        run: env | sort

      - name: diag output - dir structure
        run: pwd && ls -la

